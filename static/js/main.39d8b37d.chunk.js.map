{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/layout/Loader.js","components/logs/LogItem.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techAction.js","components/techs/TechOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","App.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","index.js"],"names":["GET_LOGS","ADD_LOGS","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","types","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","className","id","placeholder","ref","onChange","e","current","value","htmlFor","Loader","deletelog","method","setCurrent","log","href","attention","style","fontWeight","fontSize","fontFamily","onClick","message","tech","format","date","M","toast","html","state","getLogs","logs","loading","useEffect","length","map","AddBtn","getTechs","techs","firstName","lastName","addlog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","width","height","name","target","disabled","checked","newLog","Date","updateLog","upLog","addTech","setFirstName","setLastName","deleteTech","App","AutoInit","initialState","error","logReducer","action","filter","console","techReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39d8b37d.chunk.js","sourcesContent":["export const GET_LOGS = \"GET_LOGS\";\r\nexport const ADD_LOGS = \"ADD_LOGS\";\r\nexport const DELETE_LOG = \"DELETE_LOG\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_LOG = \"UPDATE_LOG\";\r\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const LOGS_ERROR = \"LOGS_ERROR\";\r\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\r\nexport const GET_TECHS = \"GET_TECHS\";\r\nexport const ADD_TECH = \"ADD_TECH\";\r\nexport const DELETE_TECH = \"DELETE_TECH\";\r\nexport const TECHS_ERROR = \"TECHS_ERROR\";\r\n","import * as types from \"./types\";\r\n\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: types.GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: types.SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addlog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: types.ADD_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletelog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/logs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: types.DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: types.UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: types.SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: types.CLEAR_CURRENT,\r\n  };\r\n};\r\n\r\n//set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: types.SET_LOADING,\r\n  };\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchLogs } from \"../../actions/logActions\";\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef(\"\");\r\n\r\n  const onChange = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"blue\">\r\n        <div className=\"nav-wrapper\">\r\n          <form>\r\n            <div className=\"input-field\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"search\"\r\n                placeholder=\"Search Techs..\"\r\n                ref={text}\r\n                onChange={onChange}\r\n              />\r\n              <label className=\"label-icon\" htmlFor=\"search\">\r\n                <i className=\"material-icons\">search</i>\r\n              </label>\r\n              <i className=\"material-icons\">close</i>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"progress blue\">\r\n      <div className=\"indeterminate\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deletelog, setCurrent } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst LogItem = ({ log, deletelog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deletelog(log.id);\r\n    M.toast({ html: `Log Deleted` });\r\n  };\r\n  return (\r\n    <li className=\"collection-header\">\r\n      <div>\r\n        <a\r\n          href=\"#edit-log-modal\"\r\n          className={`modal-trigger ${\r\n            log.attention ? \"red-text\" : \"blue-text\"\r\n          } `}\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"14px\",\r\n            fontFamily: \"Arial\",\r\n          }}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className=\"grey-text\">\r\n          <span className=\"green-text\">ID #{log.id}</span> last updated by{\" \"}\r\n          <span\r\n            className=\"purple-text\"\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"13px\",\r\n            }}\r\n          >\r\n            {log.tech}\r\n          </span>\r\n          &nbsp;on <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n        </span>\r\n        <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n          <i className=\"material-icons red-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null, { deletelog, setCurrent })(LogItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\nimport Loader from \"../layout/Loader\";\r\nimport LogItem from \"./LogItem\";\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <ul className=\"collection with-header\">\r\n      <li className=\"collection-header\">\r\n        <h4 className=\"center\">System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p>No Logs Found</p>\r\n      ) : (\r\n        logs.map((log) => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from \"react\";\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-log-modal\"\r\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href=\"#tech-list-modal\"\r\n            className=\"btn-floating green modal-trigger\"\r\n          >\r\n            <i className=\"material-icons\">person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#tech-modal\" className=\"btn-floating red modal-trigger\">\r\n            <i className=\"material-icons\">person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import * as types from \"./types\";\r\n\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/techs`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: types.GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTech = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/techs`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: types.ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/techs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: types.DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: types.SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTechs } from \"../../actions/techAction\";\r\n\r\nconst TechOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map((tech) => (\r\n      <option key={tech.id} value={`${tech.firstName} ${tech.lastName}`}>\r\n        {tech.firstName} {tech.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechOptions);\r\n","import React, { useState } from \"react\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { addlog } from \"../../actions/logActions\";\r\nimport TechOptions from \"../techs/TechOptions\";\r\n\r\nconst AddLogModal = ({ addlog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please Enter a Message and Tech\" });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n      addlog(newLog);\r\n\r\n      M.toast({ html: `Log Added by ${tech}` });\r\n      //clear fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      id=\"add-log-modal\"\r\n      className=\"modal\"\r\n      style={{ width: \"75%\", height: \"75%\" }}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                select technician\r\n              </option>\r\n              <TechOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addlog })(AddLogModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateLog } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport TechOptions from \"../techs/TechOptions\";\r\n\r\nconst EditLogModal = ({ updateLog, current }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please Enter a Message and Tech\" });\r\n    } else {\r\n      const upLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n      updateLog(upLog);\r\n      M.toast({ html: `LOG UPDATED BY ${tech}` });\r\n    }\r\n    //clear fields\r\n    setMessage(\"\");\r\n    setTech(\"\");\r\n    setTech(false);\r\n  };\r\n  return (\r\n    <div\r\n      id=\"edit-log-modal\"\r\n      className=\"modal\"\r\n      style={{ width: \"75%\", height: \"75%\" }}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                select technician\r\n              </option>\r\n              <TechOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  current: state.log.current,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTech } from \"../../actions/techAction\";\r\n\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === \"\" || lastName === \"\") {\r\n      M.toast({ html: \"Please Enter a Name\" });\r\n    } else {\r\n      addTech({ firstName, lastName });\r\n      M.toast({ html: `${firstName} is added as tech` });\r\n    }\r\n    //clear fields\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n  };\r\n  return (\r\n    <div id=\"tech-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>New Technician</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"firstName\" className=\"active\">\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"lastName\" className=\"active\">\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <a\r\n            href=\"#!\"\r\n            onClick={onSubmit}\r\n            className=\"modal-close waves-effect blue waves-light btn\"\r\n          >\r\n            Enter\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTech } from \"../../actions/techAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(tech.id);\r\n    M.toast({ html: `${tech.firstName} is deleted` });\r\n  };\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        {tech.firstName} {tech.lastName}\r\n        <a href=\"#!\" className=\"secondary-content\">\r\n          <i className=\"material-icons red-text\" onClick={onDelete}>\r\n            delete\r\n          </i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import TechItem from \"./TechItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTechs } from \"../../actions/techAction\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"tech-list-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Technician List</h4>\r\n        <ul className=\"collection\">\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import React, { Fragment, useEffect } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport \"./App.css\";\nimport SearchBar from \"./components/layout/SearchBar\";\nimport Logs from \"./components/logs/Logs\";\nimport AddBtn from \"./components/layout/AddBtn\";\nimport AddLogModal from \"./components/logs/AddLogModal\";\nimport EditLogModal from \"./components/logs/EditLogModal\";\nimport AddTechModal from \"./components/techs/AddTechModal\";\nimport TechListModal from \"./components/techs/TechListModal\";\n\nconst App = () => {\n  useEffect(() => {\n    M.AutoInit();\n  });\n  return (\n    <Fragment>\n      <SearchBar />\n      <br />\n      <div className=\"container\">\n        <AddBtn />\n        <AddLogModal />\n        <EditLogModal />\n        <AddTechModal />\n        <TechListModal />\n        <Logs />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import * as types from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  loading: false,\r\n  error: null,\r\n  current: null,\r\n};\r\n\r\nconst logReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case types.SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case types.ADD_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case types.DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case types.UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case types.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case types.CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case types.LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default logReducer;\r\n","import * as types from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\nconst techReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case types.ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n\r\n    case types.DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case types.TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case types.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default techReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport logReducer from \"./logReducer\";\r\nimport techReducer from \"./techReducer\";\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}